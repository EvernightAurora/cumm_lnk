name: build

on:
  push:
    branches:
      - main
      - feature/*
    tags:
      - '*'
  
jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10] # we only support three newest python version in windows.
        cuda-version: ['10.2', '11.1', '11.4']
    steps:
      - uses: actions/checkout@master
      - name: Install CUDA
        env: 
          cuda: ${{ matrix.cuda-version }}
        shell: powershell
        run: .\scripts\install_windows_cuda.ps1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install pep517
        run: >-
          python -m
          pip install
          pep517
          --user

      - name: Build a windows binary wheel
        run: |
          $Env:CUMM_CUDA_VERSION = "${{ matrix.cuda-version }}"
          $Env:CUMM_ENABLE_JIT = "0"
          python -m pep517.build --binary --out-dir dist/ .
        shell: powershell

      - name: test
        run: |
          python -m pip install --upgrade pip twine wheel
          python -m pip install pytest
          # python -m pip install cumm -f ./dist
          # pytest ./test
        shell: powershell
      - name: Publish a Python distribution to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        run: |
          $Env:TWINE_USERNAME = "__token__"
          $Env:TWINE_PASSWORD = "${{ secrets.pypi_password }}"
          twine upload dist/*
        shell: powershell
  
  build:
    # needs: build-windows
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: [3.8] # this version is only used for upload.
        cuda-version: ['102', '111', '114']

    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pep517
        run: >-
          python -m
          pip install
          pep517
          --user


      - name: Build a source tarball
        run: >-
          python -m
          pep517.build
          --source
          --out-dir dist/
          .

      - name: Build a binary wheel and test
        env:
          DOCKER_IMAGE: scrin/manylinux-cuda:cu${{ matrix.cuda-version }}
          PLAT: manylinux2014_x86_64
        run: |
          
          docker run --rm -e PLAT=$PLAT -e CUMM_CUDA_VERSION=${{ matrix.cuda-version }} -v `pwd`:/io $DOCKER_IMAGE bash -c "/io/tools/build-wheels.sh"
          python -m pip install --upgrade pip twine wheel
          python -m pip install pytest
          # python -m pip install myclang -f ./dist
          # pytest ./test
      
      - name: Publish a Python distribution to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}